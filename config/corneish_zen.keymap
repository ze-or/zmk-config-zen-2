#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

// 00 01 02 03 04 05	06 07 08 09 10 11
// 12 13 14 15 16 17	18 19 20 21 22 23
// 24 25 26 27 28 29	30 31 32 33 34 35
//          36 37 38	39 40 41

// ZMK forces you to define combos in terms of HW key positions
// so if your keymap is different from zaphod, use these defines to change things
// {Top,Bottom}{Left,Right}{Index,Middle,Ring,Pinky}
#define TLI 4
#define TLM 3
#define TLR 2
#define TLP 1
#define BLI 16
#define BLM 15
#define BLR 14
#define BLP 13
#define LOT 37
#define LIT 38
#define TRI 7
#define TRM 8
#define TRR 9
#define TRP 10
#define BRI 19
#define BRM 20
#define BRR 21
#define BRP 22
#define ROT 40
#define RIT 39

#define COMBO(NAME, BINDINGS, KEYPOS) \
  combo_##NAME { \
    timeout-ms = <50>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
	layers = <3>; \
  };

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};


/ {
	behaviors {
		hm: homerow_mods {
				compatible = "zmk,behavior-hold-tap";
			    flavor = "balanced";
				tapping-term-ms = <280>;
				quick-tap-ms = <175>;                // repeat on tap-into-hold
				global-quick-tap-ms = <150>;         // requires PR #1387
				bindings = <&kp>, <&kp>;
				hold-trigger-on-release;             // requires PR #1423
				#binding-cells = <2>;
				label = "HOMEROW_MODS";
		};
	};

	combos {
        compatible = "zmk,combos";
		
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        combo_lshft {
            timeout-ms = <50>;
            key-positions = <13 25>;
            bindings = <&kp LSHFT>;
        };
        combo_lctrl {
            timeout-ms = <50>;
            key-positions = <14 26>;
            bindings = <&kp LCTRL>;
        };
        combo_lgui {
            timeout-ms = <50>;
            key-positions = <15 27>;
            bindings = <&kp LGUI>;
        };
        combo_lalt {
            timeout-ms = <50>;
            key-positions = <16 28>;
            bindings = <&kp LALT>;
        };
        combo_rshft {
            timeout-ms = <50>;
            key-positions = <22 34>;
            bindings = <&kp RSHFT>;
        };
        combo_rctrl {
            timeout-ms = <50>;
            key-positions = <21 33>;
            bindings = <&kp RCTRL>;
        };
        combo_rgui {
            timeout-ms = <50>;
            key-positions = <20 32>;
            bindings = <&kp RGUI>;
        };
        combo_ralt {
            timeout-ms = <50>;
            key-positions = <19 31>;
            bindings = <&kp RALT>;
        };
		COMBO(1,&kp LS(E),BLI LOT)
		COMBO(2,&kp LS(E),BRI ROT)
		COMBO(3,&kp LS(T),BLM LOT)
		COMBO(4,&kp LS(T),BRM ROT)
		COMBO(5,&kp LS(O),BLR LOT)
		COMBO(6,&kp LS(O),BRR ROT)
		COMBO(7,&kp LS(A),BLP LOT)
		COMBO(8,&kp LS(A),BRP ROT)
		COMBO(9,&kp LPAR,BLI LIT)
		COMBO(10,&kp LPAR,BRI RIT)
		COMBO(11,&kp LBKT,BLM LIT)
		COMBO(12,&kp LBKT,BRM RIT)
		COMBO(13,&kp LBRC,BLR LIT)
		COMBO(14,&kp LBRC,BRR RIT)
		COMBO(15,&kp LT,BLP LIT)
		COMBO(16,&kp LT,BRP RIT)
		COMBO(17,&kp LS(I),LOT TLI)
		COMBO(18,&kp LS(I),ROT TRI)
		COMBO(19,&kp LS(N),LOT TLM)
		COMBO(20,&kp LS(N),ROT TRM)
		COMBO(21,&kp LS(S),LOT TLR)
		COMBO(22,&kp LS(S),ROT TRR)
		COMBO(23,&kp LS(R),LOT TLP)
		COMBO(24,&kp LS(R),ROT TRP)
		COMBO(25,&kp RPAR,LIT TLI)
		COMBO(26,&kp RPAR,RIT TRI)
		COMBO(27,&kp RBKT,LIT TLM)
		COMBO(28,&kp RBKT,RIT TRM)
		COMBO(29,&kp RBRC,LIT TLR)
		COMBO(30,&kp RBRC,RIT TRR)
		COMBO(31,&kp GT,LIT TLP)
		COMBO(32,&kp GT,RIT TRP)
		COMBO(33,&kp H,BLI BLM)
		COMBO(34,&kp H,BRI BRM)
		COMBO(35,&kp L,BLP BLR)
		COMBO(36,&kp L,BRP BRR)
		COMBO(37,&kp Y,TLI TLM)
		COMBO(38,&kp Y,TRI TRM)
		COMBO(39,&kp B,TLP TLR)
		COMBO(40,&kp B,TRP TRR)
		COMBO(41,&kp LS(H),BLI BLM LOT)
		COMBO(42,&kp LS(H),BRI BRM ROT)
		COMBO(43,&kp LS(L),BLP BLR LOT)
		COMBO(44,&kp LS(L),BRP BRR ROT)
		COMBO(45,&kp LS(Y),LOT TLI TLM)
		COMBO(46,&kp LS(Y),ROT TRI TRM)
		COMBO(47,&kp LS(B),LOT TLP TLR)
		COMBO(48,&kp LS(B),ROT TRP TRR)
		COMBO(49,&kp N0,BLI BLM LIT)
		COMBO(50,&kp N0,BRI BRM RIT)
		COMBO(51,&kp N4,BLP BLR LIT)
		COMBO(52,&kp N4,BRP BRR RIT)
		COMBO(53,&kp N5,LIT TLI TLM)
		COMBO(54,&kp N5,RIT TRI TRM)
		COMBO(55,&kp N9,LIT TLP TLR)
		COMBO(56,&kp N9,RIT TRP TRR)
		COMBO(57,&kp G,TLI TLP)
		COMBO(58,&kp G,TRI TRP)
		COMBO(59,&kp U,BLM BLR)
		COMBO(60,&kp U,BRM BRR)
		COMBO(61,&kp D,BLI BLP)
		COMBO(62,&kp D,BRI BRP)
		COMBO(63,&kp P,TLM TLR)
		COMBO(64,&kp P,TRM TRR)
		COMBO(65,&kp LS(G),LOT TLI TLP)
		COMBO(66,&kp LS(G),ROT TRI TRP)
		COMBO(67,&kp LS(U),BLM BLR LOT)
		COMBO(68,&kp LS(U),BRM BRR ROT)
		COMBO(69,&kp LS(D),BLI BLP LOT)
		COMBO(70,&kp LS(D),BRI BRP ROT)
		COMBO(71,&kp LS(P),LOT TLM TLR)
		COMBO(72,&kp LS(P),ROT TRM TRR)
		COMBO(73,&kp HASH,LIT TLI TLP)
		COMBO(74,&kp HASH,RIT TRI TRP)
		COMBO(75,&kp N2,BLM BLR LIT)
		COMBO(76,&kp N2,BRM BRR RIT)
		COMBO(77,&kp AT,BLI BLP LIT)
		COMBO(78,&kp AT,BRI BRP RIT)
		COMBO(79,&kp N7,LIT TLM TLR)
		COMBO(80,&kp N7,RIT TRM TRR)
		COMBO(81,&kp C,BLI BLR)
		COMBO(82,&kp C,BRI BRR)
		COMBO(83,&kp Q,BLM BLP)
		COMBO(84,&kp Q,BRM BRP)
		COMBO(85,&kp F,TLI TLR)
		COMBO(86,&kp F,TRI TRR)
		COMBO(87,&kp Z,TLM TLP)
		COMBO(88,&kp Z,TRM TRP)
		COMBO(89,&kp LS(C),BLI BLR LOT)
		COMBO(90,&kp LS(C),BRI BRR ROT)
		COMBO(91,&kp LS(Q),BLM BLP LOT)
		COMBO(92,&kp LS(Q),BRM BRP ROT)
		COMBO(93,&kp LS(F),LOT TLI TLR)
		COMBO(94,&kp LS(F),ROT TRI TRR)
		COMBO(95,&kp LS(Z),LOT TLM TLP)
		COMBO(96,&kp LS(Z),ROT TRM TRP)
		COMBO(97,&kp N1,BLI BLR LIT)
		COMBO(98,&kp N1,BRI BRR RIT)
		COMBO(99,&kp N3,BLM BLP LIT)
		COMBO(100,&kp N3,BRM BRP RIT)
		COMBO(101,&kp N6,LIT TLI TLR)
		COMBO(102,&kp N6,RIT TRI TRR)
		COMBO(103,&kp N8,LIT TLM TLP)
		COMBO(104,&kp N8,RIT TRM TRP)
		COMBO(105,&kp V,BLI TLR)
		COMBO(106,&kp V,BRI TRR)
		COMBO(107,&kp X,BLM TLP)
		COMBO(108,&kp X,BRM TRP)
		COMBO(109,&kp K,BLR TLI)
		COMBO(110,&kp K,BRR TRI)
		COMBO(111,&kp J,BLP TLM)
		COMBO(112,&kp J,BRP TRM)
		COMBO(113,&kp LS(V),BLI LOT TLR)
		COMBO(114,&kp LS(V),BRI ROT TRR)
		COMBO(115,&kp LS(X),BLM LOT TLP)
		COMBO(116,&kp LS(X),BRM ROT TRP)
		COMBO(117,&kp LS(K),BLR LOT TLI)
		COMBO(118,&kp LS(K),BRR ROT TRI)
		COMBO(119,&kp LS(J),BLP LOT TLM)
		COMBO(120,&kp LS(J),BRP ROT TRM)
		COMBO(121,&kp STAR,BLI LIT TLR)
		COMBO(122,&kp STAR,BRI RIT TRR)
		COMBO(123,&kp CARET,BLM LIT TLP)
		COMBO(124,&kp CARET,BRM RIT TRP)
		COMBO(125,&kp PLUS,BLR LIT TLI)
		COMBO(126,&kp PLUS,BRR RIT TRI)
		COMBO(127,&kp EQUAL,BLP LIT TLM)
		COMBO(128,&kp EQUAL,BRP RIT TRM)
		COMBO(129,&kp MINUS,BLR TLM)
		COMBO(130,&kp MINUS,BRR TRM)
		COMBO(131,&kp W,BLP TLI)
		COMBO(132,&kp W,BRP TRI)
		COMBO(133,&kp M,BLI TLP)
		COMBO(134,&kp M,BRI TRP)
		COMBO(135,&kp FSLH,BLM TLR)
		COMBO(136,&kp FSLH,BRM TRR)
		COMBO(137,&kp UNDER,BLR LOT TLM)
		COMBO(138,&kp UNDER,BRR ROT TRM)
		COMBO(139,&kp LS(W),BLP LOT TLI)
		COMBO(140,&kp LS(W),BRP ROT TRI)
		COMBO(141,&kp LS(M),BLI LOT TLP)
		COMBO(142,&kp LS(M),BRI ROT TRP)
		COMBO(143,&kp BSLH,BLM LOT TLR)
		COMBO(144,&kp BSLH,BRM ROT TRR)
		COMBO(145,&kp PRCNT,BLR LIT TLM)
		COMBO(146,&kp PRCNT,BRR RIT TRM)
		COMBO(147,&kp AMPS,BLP LIT TLI)
		COMBO(148,&kp AMPS,BRP RIT TRI)
		COMBO(149,&kp DLLR,BLI LIT TLP)
		COMBO(150,&kp DLLR,BRI RIT TRP)
		COMBO(151,&kp PIPE,BLM LIT TLR)
		COMBO(152,&kp PIPE,BRM RIT TRR)
		COMBO(153,&kp SQT,BLP TLR)
		COMBO(154,&kp SQT,BRP TRR)
		COMBO(155,&kp SEMI,BLR TLP)
		COMBO(156,&kp SEMI,BRR TRP)
		COMBO(157,&kp QMARK,BLM TLI)
		COMBO(158,&kp QMARK,BRM TRI)
		COMBO(159,&kp COMMA,BLI TLM)
		COMBO(160,&kp COMMA,BRI TRM)
		COMBO(161,&kp DQT,BLP LOT TLR)
		COMBO(162,&kp DQT,BRP ROT TRR)
		COMBO(163,&kp COLON,BLR LOT TLP)
		COMBO(164,&kp COLON,BRR ROT TRP)
		COMBO(165,&kp EXCL,BLM LOT TLI)
		COMBO(166,&kp EXCL,BRM ROT TRI)
		COMBO(167,&kp DOT,BLI LOT TLM)
		COMBO(168,&kp DOT,BRI ROT TRM)
		COMBO(169,&kp GRAVE,BLP LIT TLR)
		COMBO(170,&kp GRAVE,BRP RIT TRR)
		COMBO(171,&kp TILDE,BLI LIT TLM)
		COMBO(172,&kp TILDE,BRI RIT TRM)
		COMBO(173,&kp LEFT_GUI,BLP TLP)
		COMBO(174,&kp LEFT_GUI,BRP TRP)
		COMBO(175,&kp LEFT_ALT,BLR TLR)
		COMBO(176,&kp LEFT_ALT,BRR TRR)
		COMBO(177,&kp LEFT_CONTROL,BLM TLM)
		COMBO(178,&kp LEFT_CONTROL,BRM TRM)
		COMBO(179,&kp LEFT_SHIFT,BLI TLI)
		COMBO(180,&kp LEFT_SHIFT,BRI TRI)
		COMBO(181,&kp RIGHT,BLP TLP LOT)
		COMBO(182,&kp RIGHT,BRP TRP ROT)
		COMBO(183,&kp UP,BLR TLR LOT)
		COMBO(184,&kp UP,BRR TRR ROT)
		COMBO(185,&kp DOWN,BLM TLM LOT)
		COMBO(186,&kp DOWN,BRM TRM ROT)
		COMBO(187,&kp LEFT,BLI TLI LOT)
		COMBO(188,&kp LEFT,BRI TRI ROT)
		COMBO(189,&kp PG_UP,BLP TLP LIT)
		COMBO(190,&kp PG_UP,BRP TRP RIT)
		COMBO(191,&kp HOME,BLR TLR LIT)
		COMBO(192,&kp HOME,BRR TRR RIT)
		COMBO(193,&kp END,BLM TLM LIT)
		COMBO(194,&kp END,BRM TRM RIT)
		COMBO(195,&kp PG_DN,BLI TLI LIT)
		COMBO(196,&kp PG_DN,BRI TRI RIT)
		COMBO(197,&kp ENTER,BLI BLM BLR)
		COMBO(198,&kp ENTER,BRI BRM BRR)
		COMBO(199,&kp TAB,TLI TLM TLR)
		COMBO(200,&kp TAB,TRI TRM TRR)
		COMBO(201,&kp ESC,BLI BLM BLR LOT)
		COMBO(202,&kp ESC,BRI BRM BRR ROT)
		COMBO(203,&kp DEL,TLI TLM TLR LOT)
		COMBO(204,&kp DEL,TRI TRM TRR ROT)
		COMBO(205,&kp RALT,BLI BLM BLR LIT)
		COMBO(206,&kp RALT,BRI BRM BRR RIT)
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "Semimak";
// -----------------------------------------------------------------------------------------
// | TAB |  F  |  L  |  H  |  V  |  Z  |   |  Q  |  W  |  U  |  O  |  Y  |  ;  |
// | CTL |  S  |  R  |  N  |  T  |  K  |   |  C  |  D  |  E  |  A  |  I  |  -  |
// | SFT |  X  |  "  |  B  |  M  |  J  |   |  P  |  G  |  ,  |  .  |  /  | ENT |
//                   | NAV | BSP | SPC |   | RPT | SFT | NUM |
                        bindings = <
   &kp TAB   &kp F       &kp L         &kp H      &kp V      &kp Z   &kp Q &kp W  &kp U     &kp O   &kp Y    &kp SEMI
   &kp LCTRL &hm LSHFT S &hm LCTRL R   &hm LGUI N &hm LALT T &kp K   &kp C &kp D  &kp E     &kp A   &kp I    &kp MINUS
   &kp LSHFT &kp X       &kp SQT       &kp B      &kp M      &kp J   &kp P &kp G  &kp COMMA &kp DOT &kp FSLH &kp RET
                                          &mo 6 &kp BKSP &kp SPACE   &key_repeat &kp RSHFT &mo 5
                        >;
                };
                qwerty_layer {
                        label = "QWERTY";
                        bindings = <
   &trans &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp MINUS
   &trans &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &trans &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &trans
                   &trans &trans &trans   &trans &trans &trans
                        >;
                };
                typehack_layer {
                        label = "TypeHacK";
                        bindings = <
   &trans &kp J &kp G &kp H &kp P &kp F   &kp Q &kp V     &kp O   &kp U   &kp SEMI &kp FSLH
   &trans &kp R &kp S &kp N &kp T &kp K   &kp Y &kp I     &kp A   &kp E   &kp L    &kp MINUS
   &trans &kp Z &kp W &kp M &kp D &kp B   &kp C &kp COMMA &kp SQT &kp DOT &kp X    &trans
                   &trans &trans &trans   &trans &trans &trans
                        >;
                };
				taipo_layer {
						label = "Taipo";
						bindings = <
   &none &kp R &kp S &kp N &kp I &none   &none &kp I &kp N &kp S &kp R &none
   &none &kp A &kp O &kp T &kp E &none   &none &kp E &kp T &kp O &kp A &none
   &none &none &none &none &none &none   &none &none &none &none &none &none
			 &trans &kp SPACE &kp BSPC   &kp BSPC &kp SPACE &trans
						>;
				};
				plover_layer {
					label = "Plover";
					bindings = <
//   &trans &kp PLV_SL &kp PLV_TL &kp PLV_PL &kp PLV_HL &kp PLV_ST    &kp PLV_ST &kp PLV_FR &kp PLV_PR &kp PLV_LR &kp PLV_TR &kp PLV_DR
//   &trans &kp PLV_SL &kp PLV_KL &kp PLV_WL &kp PLV_RL &kp PLV_ST    &kp PLV_ST &kp PLV_RR &kp PLV_BR &kp PLV_GR &kp PLV_SR &kp PLV_ZR
//   &trans &kp PLV_NM &kp PLV_NM &kp PLV_NM &kp PLV_NM &kp PLV_NM    &kp PLV_NM &kp PLV_NM &kp PLV_NM &kp PLV_NM &kp PLV_NM &trans
//			                      		&trans &kp PLV_A &kp PLV_O    &kp PLV_E &kp PLV_U &trans
   &trans &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans &trans
   &trans &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans &trans
   &trans &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans &trans
		                &trans &trans &trans    &trans &trans &trans
					>;
				};
                lower_layer {
                        label = "Number";
// -----------------------------------------------------------------------------------------
// |  ~  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | "|" |
// |  `  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  \  |
// |     |  ,  |  .  |  [  |  ]  |  {  |   |  }  |  =  |  +  |  -  |  /  |     |
//                   | CON |     |     |   |     |     |     |
                        bindings = <
   &kp TILDE &kp EXCL  &kp AT  &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR &kp PIPE
   &kp GRAVE &kp N1    &kp N2  &kp N3   &kp N4   &kp N5      &kp N6    &kp N7    &kp N8          &kp N9    &kp N0   &kp BSLH
   &trans    &kp COMMA &kp DOT &kp LBKT &kp RBKT &kp LBRC    &kp RBRC  &kp EQUAL &kp PLUS        &kp MINUS &kp FSLH &trans
                          	   &mo 7    &trans   &trans      &trans    &trans    &trans
                        >;
                };

                raise_layer {
                        label = "Navig";
// -----------------------------------------------------------------------------------------
// |     | F1  | F2  | F3  | F4  |     |   | HOM |     | UP  |     | PUP |     |
// | CPS | F5  | F6  | F7  | F8  |     |   | END | LFT | DWN | RGT | PDN |     |
// |     | F9  | F10 | F11 | F12 |     |   | INS | PRN | SCL | PSE |     |     |
//                   |     | DEL |     |   |     |     | CON |
                        bindings = <
   &trans   &kp F1 &kp F2  &kp F3  &kp F4  &none    &kp HOME &none     &kp UP   &none           &kp PG_UP &none
   &kp CAPS &kp F5 &kp F6  &kp F7  &kp F8  &none    &kp END  &kp LEFT  &kp DOWN &kp RIGHT       &kp PG_DN &none
   &trans   &kp F9 &kp F10 &kp F11 &kp F12 &none    &kp INS  &kp PSCRN &kp SLCK &kp PAUSE_BREAK &trans    &trans
                    	   &trans  &kp DEL &trans   &trans   &trans    &mo 7
                        >;
                };
                double_layer {
                        label = "Config";
// -----------------------------------------------------------------------------------------
// |     | QWE | SEM | TYP |      |     |   |     | LCLK | MSUP | RCLK | SCUP |      |
// |     | BT1 | BT2 | BT3 | BT4  | BT5 |   |     | MSLF | MSDN | MSRT | SCDN |      |
// |     | TAI | PLO |     |      |     |   |     |      |      |      |      |      |
//                   |     | BTCL |     |   |     |      |      |
                        bindings = <
   &none      &to 1        &to 0        &to 2        &none        &none          &none &mkp LCLK      &mmv MOVE_UP   &mkp RCLK       &mwh SCROLL_UP   &none
   &none      &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &none &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &mwh SCROLL_DOWN &none
   &none      &to 3        &to 4        &none        &none        &none          &none &none          &none          &none           &none            &none
                    	                &none        &bt BT_CLR   &none          &none &none          &none
                        >;
                };
        };
};